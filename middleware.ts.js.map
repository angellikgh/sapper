{"version":3,"file":"middleware.ts.js","sources":["src/middleware/mime.ts","src/middleware.ts"],"sourcesContent":["import mime_raw from './mime-types.md';\n\nconst map: Map<string, string> = new Map();\n\nmime_raw.split('\\n').forEach((row: string) => {\n\tconst match = /(.+?)\\t+(.+)/.exec(row);\n\tif (!match) return;\n\n\tconst type = match[1];\n\tconst extensions = match[2].split(' ');\n\n\textensions.forEach(ext => {\n\t\tmap.set(ext, type);\n\t});\n});\n\nexport function lookup(file: string) {\n\tconst match = /\\.([^\\.]+)$/.exec(file);\n\treturn match && map.get(match[1]);\n}","import * as fs from 'fs';\nimport * as path from 'path';\nimport { ClientRequest, ServerResponse } from 'http';\nimport mkdirp from 'mkdirp';\nimport rimraf from 'rimraf';\nimport devalue from 'devalue';\nimport { lookup } from './middleware/mime';\nimport { create_routes, templates, create_compilers } from './core/index';\nimport { dest, dev } from './config';\nimport { Route, Template } from './interfaces';\nimport sourceMapSupport from 'source-map-support';\n\nsourceMapSupport.install();\n\ntype RouteObject = {\n\tid: string;\n\ttype: 'page' | 'route';\n\tpattern: RegExp;\n\tparams: (match: RegExpMatchArray) => Record<string, string>;\n\tmodule: {\n\t\trender: (data: any) => {\n\t\t\thead: string;\n\t\t\tcss: { code: string, map: any };\n\t\t\thtml: string\n\t\t},\n\t\tpreload: (data: any) => any | Promise<any>\n\t};\n\terror?: string;\n}\n\ntype Handler = (req: Req, res: ServerResponse, next: () => void) => void;\n\ninterface Req extends ClientRequest {\n\turl: string;\n\tmethod: string;\n\tpathname: string;\n\tparams: Record<string, string>;\n}\n\nexport default function middleware({ routes }: {\n\troutes: RouteObject[]\n}) {\n\tconst output = dest();\n\n\tconst client_info = JSON.parse(fs.readFileSync(path.join(output, 'client_info.json'), 'utf-8'));\n\n\tconst middleware = compose_handlers([\n\t\t(req: Req, res: ServerResponse, next: () => void) => {\n\t\t\treq.pathname = req.url.replace(/\\?.*/, '');\n\t\t\tnext();\n\t\t},\n\n\t\tfs.existsSync(path.join(output, 'index.html')) && serve({\n\t\t\tpathname: '/index.html',\n\t\t\tcache_control: 'max-age=600'\n\t\t}),\n\n\t\tfs.existsSync(path.join(output, 'service-worker.js')) && serve({\n\t\t\tpathname: '/service-worker.js',\n\t\t\tcache_control: 'max-age=600'\n\t\t}),\n\n\t\tserve({\n\t\t\tprefix: '/client/',\n\t\t\tcache_control: 'max-age=31536000'\n\t\t}),\n\n\t\tget_route_handler(client_info.assetsByChunkName, routes)\n\t].filter(Boolean));\n\n\treturn middleware;\n}\n\nfunction serve({ prefix, pathname, cache_control }: {\n\tprefix?: string,\n\tpathname?: string,\n\tcache_control: string\n}) {\n\tconst filter = pathname\n\t\t? (req: Req) => req.pathname === pathname\n\t\t: (req: Req) => req.pathname.startsWith(prefix);\n\n\tconst output = dest();\n\n\tconst cache: Map<string, Buffer> = new Map();\n\n\tconst read = dev()\n\t\t? (file: string) => fs.readFileSync(path.resolve(output, file))\n\t\t: (file: string) => (cache.has(file) ? cache : cache.set(file, fs.readFileSync(path.resolve(output, file)))).get(file)\n\n\treturn (req: Req, res: ServerResponse, next: () => void) => {\n\t\tif (filter(req)) {\n\t\t\tconst type = lookup(req.pathname);\n\n\t\t\ttry {\n\t\t\t\tconst data = read(req.pathname.slice(1));\n\n\t\t\t\tres.setHeader('Content-Type', type);\n\t\t\t\tres.setHeader('Cache-Control', cache_control);\n\t\t\t\tres.end(data);\n\t\t\t} catch (err) {\n\t\t\t\tres.statusCode = 404;\n\t\t\t\tres.end('not found');\n\t\t\t}\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t};\n}\n\nconst resolved = Promise.resolve();\n\nfunction get_route_handler(chunks: Record<string, string>, routes: RouteObject[]) {\n\tconst template = dev()\n\t\t? () => fs.readFileSync('app/template.html', 'utf-8')\n\t\t: (str => () => str)(fs.readFileSync('app/template.html', 'utf-8'));\n\n\tfunction handle_route(route: RouteObject, req: Req, res: ServerResponse) {\n\t\treq.params = route.params(route.pattern.exec(req.pathname));\n\n\t\tconst mod = route.module;\n\n\t\tif (route.type === 'page') {\n\t\t\tres.setHeader('Content-Type', 'text/html');\n\n\t\t\t// preload main.js and current route\n\t\t\t// TODO detect other stuff we can preload? images, CSS, fonts?\n\t\t\tconst link = []\n\t\t\t\t.concat(chunks.main, chunks[route.id])\n\t\t\t\t.map(file => `</client/${file}>;rel=\"preload\";as=\"script\"`)\n\t\t\t\t.join(', ');\n\n\t\t\tres.setHeader('Link', link);\n\n\t\t\tconst data = { params: req.params, query: req.query };\n\n\t\t\tlet redirect: { statusCode: number, location: string };\n\t\t\tlet error: { statusCode: number, message: Error | string };\n\n\t\t\tPromise.resolve(\n\t\t\t\tmod.preload ? mod.preload.call({\n\t\t\t\t\tredirect: (statusCode: number, location: string) => {\n\t\t\t\t\t\tredirect = { statusCode, location };\n\t\t\t\t\t},\n\t\t\t\t\terror: (statusCode: number, message: Error | string) => {\n\t\t\t\t\t\terror = { statusCode, message };\n\t\t\t\t\t}\n\t\t\t\t}, req) : {}\n\t\t\t).catch(err => {\n\t\t\t\terror = { statusCode: 500, message: err };\n\t\t\t}).then(preloaded => {\n\t\t\t\tif (redirect) {\n\t\t\t\t\tres.statusCode = redirect.statusCode;\n\t\t\t\t\tres.setHeader('Location', redirect.location);\n\t\t\t\t\tres.end();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (error) {\n\t\t\t\t\thandle_error(req, res, error.statusCode, error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst serialized = try_serialize(preloaded); // TODO bail on non-POJOs\n\t\t\t\tObject.assign(data, preloaded);\n\n\t\t\t\tconst { html, head, css } = mod.render(data);\n\n\t\t\t\tlet scripts = []\n\t\t\t\t\t.concat(chunks.main) // chunks main might be an array. it might not! thanks, webpack\n\t\t\t\t\t.map(file => `<script src='/client/${file}'></script>`)\n\t\t\t\t\t.join('');\n\n\t\t\t\tscripts = `<script>__SAPPER__ = { preloaded: ${serialized} };</script>${scripts}`;\n\n\t\t\t\tconst page = template()\n\t\t\t\t\t.replace('%sapper.scripts%', scripts)\n\t\t\t\t\t.replace('%sapper.html%', html)\n\t\t\t\t\t.replace('%sapper.head%', `<noscript id='sapper-head-start'></noscript>${head}<noscript id='sapper-head-end'></noscript>`)\n\t\t\t\t\t.replace('%sapper.styles%', (css && css.code ? `<style>${css.code}</style>` : ''));\n\n\t\t\t\tres.end(page);\n\n\t\t\t\tif (process.send) {\n\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t__sapper__: true,\n\t\t\t\t\t\turl: req.url,\n\t\t\t\t\t\tmethod: req.method,\n\t\t\t\t\t\tstatus: 200,\n\t\t\t\t\t\ttype: 'text/html',\n\t\t\t\t\t\tbody: page\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\telse {\n\t\t\tconst method = req.method.toLowerCase();\n\t\t\t// 'delete' cannot be exported from a module because it is a keyword,\n\t\t\t// so check for 'del' instead\n\t\t\tconst method_export = method === 'delete' ? 'del' : method;\n\t\t\tconst handler = mod[method_export];\n\t\t\tif (handler) {\n\t\t\t\tif (process.env.SAPPER_EXPORT) {\n\t\t\t\t\tconst { write, end, setHeader } = res;\n\t\t\t\t\tconst chunks: any[] = [];\n\t\t\t\t\tconst headers: Record<string, string> = {};\n\n\t\t\t\t\t// intercept data so that it can be exported\n\t\t\t\t\tres.write = function(chunk: any) {\n\t\t\t\t\t\tchunks.push(new Buffer(chunk));\n\t\t\t\t\t\twrite.apply(res, arguments);\n\t\t\t\t\t};\n\n\t\t\t\t\tres.setHeader = function(name: string, value: string) {\n\t\t\t\t\t\theaders[name.toLowerCase()] = value;\n\t\t\t\t\t\tsetHeader.apply(res, arguments);\n\t\t\t\t\t};\n\n\t\t\t\t\tres.end = function(chunk?: any) {\n\t\t\t\t\t\tif (chunk) chunks.push(new Buffer(chunk));\n\t\t\t\t\t\tend.apply(res, arguments);\n\n\t\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t\t__sapper__: true,\n\t\t\t\t\t\t\turl: req.url,\n\t\t\t\t\t\t\tmethod: req.method,\n\t\t\t\t\t\t\tstatus: res.statusCode,\n\t\t\t\t\t\t\ttype: headers['content-type'],\n\t\t\t\t\t\t\tbody: Buffer.concat(chunks).toString()\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst handle_bad_result = (err?: Error) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.error(err.stack);\n\t\t\t\t\t\tres.statusCode = 500;\n\t\t\t\t\t\tres.end(err.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandle_error(req, res, 404, 'Not found');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\thandler(req, res, handle_bad_result);\n\t\t\t\t} catch (err) {\n\t\t\t\t\thandle_bad_result(err);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// no matching handler for method â€” 404\n\t\t\t\thandle_error(req, res, 404, 'Not found');\n\t\t\t}\n\t\t}\n\t}\n\n\tconst not_found_route = routes.find((route: RouteObject) => route.error === '4xx');\n\tconst error_route = routes.find((route: RouteObject) => route.error === '5xx');\n\n\tfunction handle_error(req: Req, res: ServerResponse, statusCode: number, message: Error | string) {\n\t\tres.statusCode = statusCode;\n\t\tres.setHeader('Content-Type', 'text/html');\n\n\t\tconst error = message instanceof Error ? message : new Error(message);\n\n\t\tconst not_found = statusCode >= 400 && statusCode < 500;\n\n\t\tconst route = not_found\n\t\t\t? not_found_route\n\t\t\t: error_route;\n\n\t\tconst title: string = not_found\n\t\t\t? 'Not found'\n\t\t\t: `Internal server error: ${error.message}`;\n\n\t\tconst rendered = route ? route.module.render({\n\t\t\tstatus: statusCode,\n\t\t\terror\n\t\t}) : { head: '', css: null, html: title };\n\n\t\tconst { head, css, html } = rendered;\n\n\t\tconst page = template()\n\t\t\t.replace('%sapper.scripts%', `<script src='/client/${chunks.main}'></script>`)\n\t\t\t.replace('%sapper.html%', html)\n\t\t\t.replace('%sapper.head%', `<noscript id='sapper-head-start'></noscript>${head}<noscript id='sapper-head-end'></noscript>`)\n\t\t\t.replace('%sapper.styles%', (css && css.code ? `<style>${css.code}</style>` : ''));\n\n\t\tres.end(page);\n\t}\n\n\treturn function find_route(req: Req, res: ServerResponse) {\n\t\tconst url = req.pathname;\n\n\t\ttry {\n\t\t\tfor (const route of routes) {\n\t\t\t\tif (!route.error && route.pattern.test(url)) return handle_route(route, req, res);\n\t\t\t}\n\n\t\t\thandle_error(req, res, 404, 'Not found');\n\t\t} catch (error) {\n\t\t\thandle_error(req, res, 500, error);\n\t\t}\n\t};\n}\n\nfunction compose_handlers(handlers: Handler[]) {\n\treturn (req: Req, res: ServerResponse, next: () => void) => {\n\t\tlet i = 0;\n\t\tfunction go() {\n\t\t\tconst handler = handlers[i];\n\n\t\t\tif (handler) {\n\t\t\t\thandler(req, res, () => {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tgo();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}\n\n\t\tgo();\n\t};\n}\n\nfunction read_json(file: string) {\n\treturn JSON.parse(fs.readFileSync(file, 'utf-8'));\n}\n\nfunction try_serialize(data: any) {\n\ttry {\n\t\treturn devalue(data);\n\t} catch (err) {\n\t\treturn null;\n\t}\n}"],"names":["dest","fs.readFileSync","path.join","fs.existsSync","dev","path.resolve"],"mappings":"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"}